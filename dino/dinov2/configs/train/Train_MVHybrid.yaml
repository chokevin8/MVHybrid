compute_precision:
  grad_scaler: true
  teacher:
    backbone:
      sharding_strategy: FULL_SHARD #SHARD_GRAD_OP only shards optimizer_state and gradients, while FULL_SHARD also shards the model parameters. SHARD_GRAD_OP reduces communication overhead at cost of highe rmemory footprint.
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16 
        buffer_dtype: fp16
    dino_head:
      sharding_strategy: FULL_SHARD
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16
        buffer_dtype: fp16
    ibot_head:
      sharding_strategy: FULL_SHARD
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16 
        buffer_dtype: fp16 
  student:
    backbone:
      sharding_strategy: FULL_SHARD
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16  
        buffer_dtype: fp16 
    dino_head:
      sharding_strategy: FULL_SHARD
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16 
        buffer_dtype: fp16 
    ibot_head:
      sharding_strategy: FULL_SHARD
      mixed_precision:
        param_dtype: fp32
        reduce_dtype: fp16 
        buffer_dtype: fp16 
dino:
  head_n_prototypes: 65536
  head_bottleneck_dim: 256
ibot:
  separate_head: true
  head_n_prototypes: 65536
  head_bottleneck_dim: 256

train:
  OFFICIAL_EPOCH_LENGTH: 493 # 755936 (total # of patch images)/total BS (nGPU * batch_size_per_gpu)
  batch_size_per_gpu: 64 # adjust to your requirements
  centering: sinkhorn_knopp
  dataset_path: TCGADataset:split=TRAIN
  saveckp_freq: 10 # save every 10 epochs
  num_workers: 8

student:
  arch: mamba_vision_S # mamba_vision_S
  if_einfft: True #False for no EinFFT block and MLP block, True for EinFFT block and no MLP block
  einfft_mamba_only: True #only einfft on Mamba, not on Attention (channel mixing layer)
  if_mlp: False
  num_cls_tokens: 1
  if_registers: False
  patch_size: 16
  drop_path_rate: 0. #0 for mamba instabilities
  # ffn_layer: swiglufused # only for vit
  block_chunks: 0 # no need to use block_chunks for vim
  depth: 24
  qkv_bias: True

teacher:
  momentum_teacher: 0.992 # higher b/c lower batch size, default is 0.994 
  final_momentum_teacher: 1
  warmup_teacher_temp: 0.04 
  teacher_temp: 0.06 #default is 0.07
  warmup_teacher_temp_epochs: 30

optim:
  epochs: 200 # actual epochs, so the total num of iterations = epochs * OFFICIAL_EPOCH_LENGTH
  weight_decay: 0.04
  weight_decay_end: 0.4
  lr : 0. #determined after
  base_lr: 0.002 # default is 0.004
  layerwise_decay: 1.0

crops:
  global_crops_scale:
  - 0.32
  - 1.0
  local_crops_number: 8
  local_crops_scale:
  - 0.05
  - 0.32
  global_crops_size: 256
  local_crops_size: 112

evaluation:
  eval_period_iterations: 2465 # modify this number to save teacher checkpoint every this iteration, make sure it is divisible with OFFICIAL_EPOCH_LENGTH x epochs or less. 


